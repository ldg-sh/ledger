services:
  ledger:
    image: ghcr.io/ldg-sh/ledger:latest
    container_name: ledger
    restart: always
    environment:
      - S3_ACCESS_KEY=ledger
      - S3_SECRET_KEY=ledger-password
      - S3_BUCKET_NAME=ledger
      - S3_BUCKET_REGION=auto
      - S3_URL=http://minio:9000
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/ledger
      - REDIS_URI=redis://redis:6379
      - GRPC_URL=http://ledger-auth:50051
      - GRPC_AUTH_KEY=${GRPC_AUTH_KEY}

    networks:
      - ledger-network
    depends_on:
      - postgres
      - minio
      - ledger-auth

  ledger-auth:
    image: ghcr.io/ldg-sh/ledger-auth:latest
    pull_policy: always
    container_name: ledger-auth
    restart: always
    environment:
      - RESEND_KEY=${RESEND_KEY}
      - DATABASE_URL=postgresql://postgres:postgres@postgres-auth:5432/ledger
      - PORT=8080
      - ADMIN_KEY=${ADMIN_KEY}
      - GRPC_PORT=50051
      - GRPC_AUTH_KEY=${GRPC_AUTH_KEY}
    networks:
      - ledger-network
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ledger
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - ledger-network
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-auth:
    image: postgres:latest
    container_name: postgres-auth
    volumes:
      - postgres-data-auth:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ledger
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - ledger-network
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data
    environment:
      - MINIO_ROOT_USER=ledger
      - MINIO_ROOT_PASSWORD=ledger-password
    volumes:
      - minio-data:/data
    networks:
      - ledger-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - ledger-network

volumes:
  postgres-data:
  postgres-data-auth:
  minio-data:

networks:
  ledger-network:
    driver: bridge
